[{"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/index.js":"1","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/App.js":"2","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/reportWebVitals.js":"3","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/context/auth.context.js":"4","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/pages/SignupPage.js":"5","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/pages/LoginPage.js":"6","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/pages/HomePage.js":"7","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/components/IsAnon.js":"8","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/services/auth.service.js":"9"},{"size":746,"mtime":1683795954475,"results":"10","hashOfConfig":"11"},{"size":775,"mtime":1683795831669,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1683794821647,"results":"13","hashOfConfig":"11"},{"size":2150,"mtime":1683796712419,"results":"14","hashOfConfig":"11"},{"size":2043,"mtime":1683795653565,"results":"15","hashOfConfig":"11"},{"size":1962,"mtime":1683795846996,"results":"16","hashOfConfig":"11"},{"size":112,"mtime":1683795741769,"results":"17","hashOfConfig":"11"},{"size":552,"mtime":1683795306542,"results":"18","hashOfConfig":"11"},{"size":1278,"mtime":1683795396741,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"16o44xt",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/index.js",[],[],[],"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/App.js",[],[],"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/reportWebVitals.js",[],[],"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/context/auth.context.js",["51","52"],[],"// src/context/auth.context.js\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport authService from \"./../services/auth.service\";\n\nconst API_URL = \"http://localhost:5005\";\n\nconst AuthContext = React.createContext();\n\nfunction AuthProviderWrapper(props) {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  const storeToken = (token) => {\n    localStorage.setItem(\"authToken\", token);\n  };\n\n  const authenticateUser = () => {\n    // Get the stored token from the localStorage\n    const storedToken = localStorage.getItem(\"authToken\");\n\n    // If the token exists in the localStorage\n    if (storedToken) {\n      // We must send the JWT token in the request's \"Authorization\" Headers\n      authService\n        .verify()\n        .then((response) => {\n          // If the server verifies that the JWT token is valid\n          const user = response.data;\n          // Update state variables\n          setIsLoggedIn(true);\n          setIsLoading(false);\n          setUser(user);\n        })\n        .catch((error) => {\n          // If the server sends an error response (invalid token)\n          // Update state variables\n          setIsLoggedIn(false);\n          setIsLoading(false);\n          setUser(null);\n        });\n    } else {\n      // If the token is not available (or is removed)\n      setIsLoggedIn(false);\n      setIsLoading(false);\n      setUser(null);\n    }\n  };\n\n  const removeToken = () => {\n    // Upon logout, remove the token from the localStorage\n    localStorage.removeItem(\"authToken\");\n  };\n\n  const logOutUser = () => {\n    // To log out the user, remove the token\n    removeToken();\n    // and update the state variables\n    authenticateUser();\n  };\n\n  useEffect(() => {\n    authenticateUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn,\n        isLoading,\n        user,\n        storeToken,\n        authenticateUser,\n        logOutUser,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport { AuthProviderWrapper, AuthContext };\n","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/pages/SignupPage.js",["53","54"],[],"// src/pages/SignupPage.js\n\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport authService from \"./../services/auth.service\";\n\nconst API_URL = \"http://localhost:5005\";\n\nfunction SignupPage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(undefined);\n\n  const navigate = useNavigate();\n\n  const handleEmail = (e) => setEmail(e.target.value);\n  const handlePassword = (e) => setPassword(e.target.value);\n  const handleName = (e) => setName(e.target.value);\n\n  const handleSignupSubmit = (e) => {\n    e.preventDefault();\n    // Create an object representing the request body\n    const requestBody = { email, password, name };\n\n    // Make an axios request to the API\n    // If the POST request is a successful redirect to the login page\n    // If the request resolves with an error, set the error message in the state\n    authService\n      .signup(requestBody)\n      .then((response) => {\n        navigate(\"/login\");\n      })\n      .catch((error) => {\n        const errorDescription = error.response.data.message;\n        setErrorMessage(errorDescription);\n      });\n  };\n\n  return (\n    <div className=\"SignupPage\">\n      <h1>Sign Up</h1>\n\n      <form onSubmit={handleSignupSubmit}>\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" value={email} onChange={handleEmail} />\n\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handlePassword}\n        />\n\n        <label>Name:</label>\n        <input type=\"text\" name=\"name\" value={name} onChange={handleName} />\n\n        <button type=\"submit\">Sign Up</button>\n      </form>\n\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      <p>Already have account?</p>\n      <Link to={\"/login\"}> Login</Link>\n    </div>\n  );\n}\n\nexport default SignupPage;\n","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/pages/LoginPage.js",["55","56"],[],"import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth.context\";\nimport authService from \"./../services/auth.service\";\n\nconst API_URL = \"http://localhost:5005\";\n\nfunction LoginPage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(undefined);\n\n  const navigate = useNavigate();\n\n  const { storeToken, authenticateUser } = useContext(AuthContext);\n\n  const handleEmail = (e) => setEmail(e.target.value);\n  const handlePassword = (e) => setPassword(e.target.value);\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    const requestBody = { email, password };\n\n    authService\n      .login(requestBody)\n      .then((response) => {\n        // Request to the server's endpoint `/auth/login` returns a response\n        // with the JWT string ->  response.data.authToken\n        console.log(\"JWT token\", response.data.authToken);\n\n        storeToken(response.data.authToken);\n        authenticateUser();\n\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        const errorDescription = error.response.data.message;\n        setErrorMessage(errorDescription);\n      });\n  };\n\n  return (\n    <div className=\"LoginPage\">\n      <h1>Login</h1>\n\n      <form onSubmit={handleLoginSubmit}>\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" value={email} onChange={handleEmail} />\n\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handlePassword}\n        />\n\n        <button type=\"submit\">Login</button>\n      </form>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      <p>Don't have an account yet?</p>\n      <Link to={\"/signup\"}> Sign Up</Link>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/pages/HomePage.js",[],[],"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/components/IsAnon.js",[],[],"/Users/alexandra.strang/code/house_helper_fullstack/projector-client/src/services/auth.service.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":7,"column":7,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":8,"column":7,"nodeType":"59","messageId":"60","endLine":8,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":7,"column":7,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'API_URL' is assigned a value but never used."]